name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'   # Ëá™Âä®Ëß¶ÂèëÔºöpush tag v1.0.0
  workflow_dispatch:   # ÊâãÂä®Ëß¶Âèë

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Get version & extension name from extension.json
        id: meta
        run: |
          echo "VERSION=$(jq -r .version extension.json)" >> $GITHUB_ENV
          echo "EEXTNAME=$(jq -r .name extension.json)" >> $GITHUB_ENV

      - name: Extract changelog for version
        id: changelog
        run: |
          VERSION=${{ env.VERSION }}
          EEXTNAME=${{ env.EEXTNAME }}
          echo "üîé Extracting changelog for version $VERSION from CHANGELOG.md"
          NOTES=$(awk "/^# ${VERSION}/ {flag=1; next} /^#/ {if(flag) exit} flag" CHANGELOG.md)
          if [ -z "$NOTES" ]; then
            NOTES=$(awk "/^# ${VERSION}/ {flag=1; next} flag" CHANGELOG.md)
          fi
          NOTES="$NOTES\n\n---\nÁî±GitHub actionsËá™Âä®ÊûÑÂª∫Âπ∂ÂèëÂ∏É\n‰πüÂèØÂâçÂæÄ[ÂòâÁ´ãÂàõEDAÊâ©Â±ïÂπøÂú∫](https://extensions.oshwhub.com/item/oshwhub/${EEXTNAME})‰∏ãËΩΩ"
          
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo -e "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "------ Release Notes ------"
          echo -e "$NOTES"
          echo "---------------------------"

      - name: Debug check artifact
        run: |
          VERSION=${{ env.VERSION }}
          EEXTNAME=${{ env.EEXTNAME }}
          FILE="build/dist/${EEXTNAME}_v${VERSION}.eext"
          if [ -f "$FILE" ]; then
            echo "‚úÖ Found artifact: $FILE"
          else
            echo "‚ùå Artifact not found: $FILE"
            ls -R build || true
            exit 1
          fi

      - name: Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: ${{ env.RELEASE_NOTES }}
          files: build/dist/${{ env.EEXTNAME }}_v${{ env.VERSION }}.eext
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
